{"events":[{"name":"control","code":"// プレイヤーが移動不可であれば早期リターン\nif coms.message_box.is_some() {\n    return true;\n}\n\n// プレイヤーが移動開始不可であれば移動して早期リターン\nif !this.can_start_move() {\n    this.do_move(duration);\n    coms.camera.chase(this.get_position());\n    return true;\n}\n\n// 新しく入力された方向を取得\nconst DIRECTIONS: [(KeyCode, (i32, i32, ActorDirection)); 4] = [\n    (KeyCode::ArrowLeft, (0, -1, ActorDirection::Left)),\n    (KeyCode::ArrowRight, (0, 1, ActorDirection::Right)),\n    (KeyCode::ArrowUp, (-1, 0, ActorDirection::Up)),\n    (KeyCode::ArrowDown, (1, 0, ActorDirection::Down)),\n];\nlet mut recent_input = None;\nlet mut min_state = std::u32::MAX;\nfor (kc, n) in &DIRECTIONS {\n    let state = mngrs.in_mngr.get(kc);\n    if state > 0 && state < min_state {\n        recent_input = Some(n.clone());\n        min_state = state;\n    }\n}\n\n// 新しく入力された方向がないなら移動して早期リターン\nlet Some((di, dj, direction)) = recent_input else {\n    this.do_move(duration);\n    coms.camera.chase(this.get_position());\n    return true;\n};\n\n// 取り敢えず向きを変更\nthis.change_direction(direction.clone());\n\n// 旧座標から新座標取得\nlet (oi, oj) = this.get_ij();\nlet (ni, nj) = (oi as i32 + di, oj as i32 + dj);\n\n// 移動先が進入可能ならば移動開始\n// TODO: アクター同士がぶつからないようにする。\nif ni >= 0 && nj >= 0 {\n    if let Some(tile) = coms.tiles.get(ni as usize, nj as usize) {\n        if tile.is_passable() {\n            this.start_move(direction);\n        }\n    }\n}\n\n// 移動\nthis.do_move(duration);\ncoms.camera.chase(this.get_position());\n\nreturn true;\n"}],"image":"actor1.png","width":48,"height":64,"moving":{"left":[{"time":0,"l":0,"t":0,"w":0.1875,"h":0.25},{"time":0.333,"l":0.1875,"t":0,"w":0.1875,"h":0.25},{"time":0.666,"l":0.375,"t":0,"w":0.1875,"h":0.25}],"right":[{"time":0,"l":0,"t":0.25,"w":0.1875,"h":0.25},{"time":0.333,"l":0.1875,"t":0.25,"w":0.1875,"h":0.25},{"time":0.666,"l":0.375,"t":0.25,"w":0.1875,"h":0.25}],"up":[{"time":0,"l":0,"t":0.5,"w":0.1875,"h":0.25},{"time":0.333,"l":0.1875,"t":0.5,"w":0.1875,"h":0.25},{"time":0.666,"l":0.375,"t":0.5,"w":0.1875,"h":0.25}],"down":[{"time":0,"l":0,"t":0.75,"w":0.1875,"h":0.25},{"time":0.333,"l":0.1875,"t":0.75,"w":0.1875,"h":0.25},{"time":0.666,"l":0.375,"t":0.75,"w":0.1875,"h":0.25}]},"idle":{"left":[{"time":0,"l":0,"t":0,"w":0.1875,"h":0.25}],"right":[{"time":0,"l":0,"t":0.25,"w":0.1875,"h":0.25}],"up":[{"time":0,"l":0,"t":0.5,"w":0.1875,"h":0.25}],"down":[{"time":0,"l":0,"t":0.75,"w":0.1875,"h":0.25}]}}